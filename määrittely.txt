main.jsx:

import ReactDOM from 'react-dom/client'

import App from './App'

ReactDOM.createRoot(document.getElementById('root')).render(<App />)


App.jsx:

const App = () => {
  // const-määrittelyt

  return (
    <div>
    
    </div>
  )
}
git repositorio sun muu:
https://github.com/mluukkai/ohjelmistotekniikka-kevat2019/blob/master/tehtavat/viikko1.md#gitin-alkeet

Vite:
Luodaan sovellus nimeltään part1, mennään sovelluksen sisältämään hakemistoon ja asennetaan sovelluksen käyttämät kirjastot:

npm create vite@latest part1 -- --template react
cd part1
npm install
Sovellus käynnistetään seuraavasti:

npm run dev

db.json serveri erikseen: npx json-server --port 3001 db.json

axios:
npm install axios
npm install json-server --save-dev
packagen script-osioon:
"server": "json-server -p3001 --watch db.json"



palvelimen teko:
sopivaan repositorioon ja npm init
npm install express (npm update ja npm install)
npm install --save-dev nodemon

esim.
const express = require('express')
const app = express()

app.use(express.json())

let notes = [
  ...
]

app.get('/', (request, response) => {
  response.send('<h1>Hello World!</h1>')
})

app.get('/api/notes', (request, response) => {
  response.json(notes)
})

const PORT = 3001
app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`)
})

scripteihin:

  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "dev": "nodemon index.js",
    "start": "node index.js"
  },

käynnistä nodemonissa: npm run dev

Jotta frontend ja backend toimii yhedessä cors: npm install cors
